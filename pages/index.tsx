import React, { useState, useEffect, useMemo } from 'react'
import type { NextPage } from 'next'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import Box from '@mui/material/Box'
import Paper from '@mui/material/Paper'
import Container from '@mui/material/Container'
import Stack from '@mui/material/Stack'
import { Priority, Todo } from './api/todos'
import AddTodo from '../components/AddTodo'
import TodoList from '../components/TodoList'

const Home: NextPage = () => {
  const [todos, setTodos] = useState<Todo[]>([])
  const [defaultPriority, setDefaultPriority] = useState<Priority>('low')
  const doneTodos = useMemo(() => todos.filter(t => t.done), [todos])
  const inProgressTodos = useMemo(() => todos.filter(t => !t.done), [todos])

  useEffect(() => {
    fetch('/api/todos')
      .then(res => res.json())
      .then(data => {
        setTodos(data.todos)
      })
  }, [])

  const onAddTodo = (todo: Todo) => {
    todo.priority = defaultPriority
    setTodos([...todos, todo])
  }

  const deleteTodo = (todo: Todo) => {
    const index = todos.findIndex(t => t.id === todo.id)
    if (index > -1) {
      todos.splice(index, 1)
      setTodos([...todos])
    }
  }

  const onUpdateTodo = (todo: Todo) => {
    const index = todos.findIndex(t => t.id === todo.id)
    if (index > -1) {
      todos[index] = todo
      setTodos([...todos])
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Todo App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Container>
          <Paper
            elevation={3}
            sx={{
              margin: 1,
              padding: 1,
            }}>
            <Stack>
              <AddTodo
                todos={todos}
                onAddTodo={onAddTodo}
                defaultPriority={defaultPriority}
                setDefaultPriority={setDefaultPriority}
              />
              <TodoList
                todos={inProgressTodos}
                deleteTodo={deleteTodo}
                onUpdateTodo={onUpdateTodo}
              />
            </Stack>
          </Paper>
          {doneTodos.length > 0 && (
            <Paper
              elevation={3}
              sx={{
                marginY: 8,
                marginX: 1,
                padding: 1,
              }}>
              <Stack>
                <Box sx={{ typography: 'h5', margin: 1 }}>Completed</Box>
                <TodoList
                  todos={doneTodos}
                  deleteTodo={deleteTodo}
                  onUpdateTodo={onUpdateTodo}
                />
              </Stack>
            </Paper>
          )}
        </Container>
      </main>

      <footer className={styles.footer}></footer>
    </div>
  )
}

export default Home
